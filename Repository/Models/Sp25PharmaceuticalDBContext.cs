// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Repository.Models;

public partial class Sp25PharmaceuticalDBContext : DbContext
{
    public Sp25PharmaceuticalDBContext()
    {
    }

    public Sp25PharmaceuticalDBContext(DbContextOptions<Sp25PharmaceuticalDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Manufacturer> Manufacturers { get; set; }

    public virtual DbSet<MedicineInformation> MedicineInformations { get; set; }

    public virtual DbSet<StoreAccount> StoreAccounts { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=LAPTOP-BMLNINDC\\SQLEXPRESS;Initial Catalog=Sp25PharmaceuticalDB;Persist Security Info=True;User ID=sa;Password=12345; Encrypt=False");

    //     "DefaultConnection": "Data Source=LAPTOP-BMLNINDC\\SQLEXPRESS;Initial Catalog=SP25_PRN222_NET1710_PRJ_G5_SkincareBookingSystem;Persist Security Info=True;User ID=sa;Password=12345;Encrypt=False"


    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Manufacturer>(entity =>
        {
            entity.HasKey(e => e.ManufacturerID).HasName("PK__Manufact__357E5CA15A994453");

            entity.ToTable("Manufacturer");

            entity.Property(e => e.ManufacturerID).HasMaxLength(20);
            entity.Property(e => e.ContactInformation)
                .IsRequired()
                .HasMaxLength(120);
            entity.Property(e => e.CountryofOrigin)
                .IsRequired()
                .HasMaxLength(250);
            entity.Property(e => e.ManufacturerName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.ShortDescription).HasMaxLength(400);
        });

        modelBuilder.Entity<MedicineInformation>(entity =>
        {
            entity.HasKey(e => e.MedicineID).HasName("PK__Medicine__4F2128F03487B2D4");

            entity.ToTable("MedicineInformation");

            entity.Property(e => e.MedicineID).HasMaxLength(30);
            entity.Property(e => e.ActiveIngredients)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.DosageForm)
                .IsRequired()
                .HasMaxLength(400);
            entity.Property(e => e.ExpirationDate).HasMaxLength(120);
            entity.Property(e => e.ManufacturerID).HasMaxLength(20);
            entity.Property(e => e.MedicineName)
                .IsRequired()
                .HasMaxLength(160);
            entity.Property(e => e.WarningsAndPrecautions)
                .IsRequired()
                .HasMaxLength(400);

            entity.HasOne(d => d.Manufacturer).WithMany(p => p.MedicineInformations)
                .HasForeignKey(d => d.ManufacturerID)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__MedicineI__Manuf__286302EC");
        });

        modelBuilder.Entity<StoreAccount>(entity =>
        {
            entity.HasKey(e => e.StoreAccountID).HasName("PK__StoreAcc__42D52A6AB5E5EFA5");

            entity.ToTable("StoreAccount");

            entity.HasIndex(e => e.EmailAddress, "UQ__StoreAcc__49A14740E6470271").IsUnique();

            entity.Property(e => e.StoreAccountID).ValueGeneratedNever();
            entity.Property(e => e.EmailAddress).HasMaxLength(90);
            entity.Property(e => e.StoreAccountDescription)
                .IsRequired()
                .HasMaxLength(140);
            entity.Property(e => e.StoreAccountPassword)
                .IsRequired()
                .HasMaxLength(90);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}